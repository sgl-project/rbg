/*
Copyright 2025.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	workloadsv1alpha1 "sigs.k8s.io/rbgs/api/workloads/v1alpha1"
)

// RoleBasedGroupScalingAdapterStatusApplyConfiguration represents a declarative configuration of the RoleBasedGroupScalingAdapterStatus type for use
// with apply.
type RoleBasedGroupScalingAdapterStatusApplyConfiguration struct {
	Phase         *workloadsv1alpha1.AdapterPhase `json:"phase,omitempty"`
	Replicas      *int32                          `json:"replicas,omitempty"`
	Selector      *string                         `json:"selector,omitempty"`
	LastScaleTime *v1.Time                        `json:"lastScaleTime,omitempty"`
}

// RoleBasedGroupScalingAdapterStatusApplyConfiguration constructs a declarative configuration of the RoleBasedGroupScalingAdapterStatus type for use with
// apply.
func RoleBasedGroupScalingAdapterStatus() *RoleBasedGroupScalingAdapterStatusApplyConfiguration {
	return &RoleBasedGroupScalingAdapterStatusApplyConfiguration{}
}

// WithPhase sets the Phase field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Phase field is set to the value of the last call.
func (b *RoleBasedGroupScalingAdapterStatusApplyConfiguration) WithPhase(value workloadsv1alpha1.AdapterPhase) *RoleBasedGroupScalingAdapterStatusApplyConfiguration {
	b.Phase = &value
	return b
}

// WithReplicas sets the Replicas field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Replicas field is set to the value of the last call.
func (b *RoleBasedGroupScalingAdapterStatusApplyConfiguration) WithReplicas(value int32) *RoleBasedGroupScalingAdapterStatusApplyConfiguration {
	b.Replicas = &value
	return b
}

// WithSelector sets the Selector field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Selector field is set to the value of the last call.
func (b *RoleBasedGroupScalingAdapterStatusApplyConfiguration) WithSelector(value string) *RoleBasedGroupScalingAdapterStatusApplyConfiguration {
	b.Selector = &value
	return b
}

// WithLastScaleTime sets the LastScaleTime field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the LastScaleTime field is set to the value of the last call.
func (b *RoleBasedGroupScalingAdapterStatusApplyConfiguration) WithLastScaleTime(value v1.Time) *RoleBasedGroupScalingAdapterStatusApplyConfiguration {
	b.LastScaleTime = &value
	return b
}
