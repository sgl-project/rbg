/*
Copyright 2025.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
	workloadsv1alpha1 "sigs.k8s.io/rbgs/api/workloads/v1alpha1"
)

// RoleBasedGroupLister helps list RoleBasedGroups.
// All objects returned here must be treated as read-only.
type RoleBasedGroupLister interface {
	// List lists all RoleBasedGroups in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*workloadsv1alpha1.RoleBasedGroup, err error)
	// RoleBasedGroups returns an object that can list and get RoleBasedGroups.
	RoleBasedGroups(namespace string) RoleBasedGroupNamespaceLister
	RoleBasedGroupListerExpansion
}

// roleBasedGroupLister implements the RoleBasedGroupLister interface.
type roleBasedGroupLister struct {
	listers.ResourceIndexer[*workloadsv1alpha1.RoleBasedGroup]
}

// NewRoleBasedGroupLister returns a new RoleBasedGroupLister.
func NewRoleBasedGroupLister(indexer cache.Indexer) RoleBasedGroupLister {
	return &roleBasedGroupLister{listers.New[*workloadsv1alpha1.RoleBasedGroup](indexer, workloadsv1alpha1.Resource("rolebasedgroup"))}
}

// RoleBasedGroups returns an object that can list and get RoleBasedGroups.
func (s *roleBasedGroupLister) RoleBasedGroups(namespace string) RoleBasedGroupNamespaceLister {
	return roleBasedGroupNamespaceLister{listers.NewNamespaced[*workloadsv1alpha1.RoleBasedGroup](s.ResourceIndexer, namespace)}
}

// RoleBasedGroupNamespaceLister helps list and get RoleBasedGroups.
// All objects returned here must be treated as read-only.
type RoleBasedGroupNamespaceLister interface {
	// List lists all RoleBasedGroups in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*workloadsv1alpha1.RoleBasedGroup, err error)
	// Get retrieves the RoleBasedGroup from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*workloadsv1alpha1.RoleBasedGroup, error)
	RoleBasedGroupNamespaceListerExpansion
}

// roleBasedGroupNamespaceLister implements the RoleBasedGroupNamespaceLister
// interface.
type roleBasedGroupNamespaceLister struct {
	listers.ResourceIndexer[*workloadsv1alpha1.RoleBasedGroup]
}
